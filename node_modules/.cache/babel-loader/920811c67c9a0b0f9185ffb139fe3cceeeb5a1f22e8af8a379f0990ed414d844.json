{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectOption = () => {\n  _s();\n  const [provinces, setProvinces] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n  const [result, setResult] = useState(false);\n  const fetchProvinceData = async () => {\n    try {\n      const response = await axios.get('https://api.staging.goldenqueenhospital.com/v1/pumi');\n      const fetchedProvinces = response.data.data;\n      setProvinces(fetchedProvinces);\n    } catch (error) {\n      console.error('Error fetching province data:', error);\n    }\n  };\n  const fetchDistrictData = async provinceId => {\n    try {\n      const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/districts?parent_id=${provinceId}`);\n      const fetchedDistricts = response.data.data;\n      setDistricts(fetchedDistricts);\n    } catch (error) {\n      console.error('Error fetching district data:', error);\n    }\n  };\n  const fetchCommunesData = async districtId => {\n    try {\n      const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/communes?parent_id=${districtId}`);\n      const fetchedCommunes = response.data.data;\n      setCommunes(fetchedCommunes);\n    } catch (error) {\n      console.error('Error fetching commune data:', error);\n    }\n  };\n  const fetchVillagesData = async communeId => {\n    try {\n      const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/villages?parent_id=${communeId}`);\n      const fetchedVillages = response.data.data;\n      setVillages(fetchedVillages);\n    } catch (error) {\n      console.error('Error fetching village data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchProvinceData();\n  }, []);\n  const handleProvinceSelect = provinceId => {\n    fetchDistrictData(provinceId);\n    setSelectedProvince(provinces.find(pro => pro.id === parseInt(provinceId)));\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setDistricts([]);\n    setCommunes([]);\n    setVillages([]);\n  };\n  const handleDistrictSelect = districtId => {\n    setSelectedDistrict(districts.find(dis => dis.id == parseInt(districtId)));\n    fetchCommunesData(districtId);\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setCommunes([]);\n    setVillages([]);\n  };\n  const handleCommuneSelect = communeId => {\n    setSelectedCommune(communes.find(commune => commune.id == parseInt(communeId)));\n    fetchVillagesData(communeId);\n    setSelectedVillage('');\n    setVillages([]);\n  };\n  const handleVillageSelect = villageId => {\n    setSelectedVillage(villages.find(village => village.id == parseInt(villageId)));\n    // fetchVillagesData(villageId);\n  };\n  const handleClear = () => {\n    setSelectedProvince('');\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setDistricts([]);\n    setCommunes([]);\n    setVillages([]);\n    setResult({});\n  };\n  const handleSubmit = () => {\n    setResult(true);\n    setResult({\n      province: selectedProvince,\n      district: selectedDistrict,\n      communes: selectedCommune,\n      village: selectedVillage\n    });\n    setProvinces([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleProvinceSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: province.id,\n        children: [province.name, \" / \", province.name_km]\n      }, province.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"District\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleDistrictSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a district\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: district.id,\n        children: [district.name, \" / \", district.name_km]\n      }, district.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Communes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleCommuneSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a commune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), communes.map(commune => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: commune.id,\n        children: [commune.name, \" / \", commune.name_km]\n      }, commune.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Villages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleVillageSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), villages.map(village => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: village.id,\n        children: [village.name, \" / \", village.name_km]\n      }, village.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your seleted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Province: \", selectedProvince.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"district: \", selectedDistrict.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"commune: \", selectedCommune.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"village: \", selectedVillage.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"psogjKRmkIDMnUoru6CcBZSU/2E=\");\n_c = SelectOption;\nexport default SelectOption;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SelectOption = () => {\n//   const [provinces, setProvinces] = useState([]);\n//   const [districts, setDistricts] = useState([]);\n//   const [communes, setCommunes] = useState([]);\n//   const [villages, setVillages] = useState([]);\n\n//   const [selectedProvince, setSelectedProvince] = useState('');\n//   const [selectedDistrict, setSelectedDistrict] = useState('');\n//   const [selectedCommune, setSelectedCommune] = useState('');\n//   const [selectedVillage, setSelectedVillage] = useState('');\n\n//   const [result, setResult] = useState(false);\n\n//   const fetchProvinceData = async () => {\n//     try {\n//       const response = await axios.get('https://api.staging.goldenqueenhospital.com/v1/pumi');\n//       const fetchedProvinces = response.data.data;\n//       setProvinces(fetchedProvinces);\n//     } catch (error) {\n//       console.error('Error fetching province data:', error);\n//     }\n//   };\n\n//   const fetchDistrictData = async (provinceId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/districts?parent_id=${provinceId}`);\n//       const fetchedDistricts = response.data.data;\n//       setDistricts(fetchedDistricts);\n//     } catch (error) {\n//       console.error('Error fetching district data:', error);\n//     }\n//   };\n\n//   const fetchCommunesData = async (districtId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/communes?parent_id=${districtId}`);\n//       const fetchedCommunes = response.data.data;\n//       setCommunes(fetchedCommunes);\n//     } catch (error) {\n//       console.error('Error fetching commune data:', error);\n//     }\n//   };\n\n//   const fetchVillagesData = async (communeId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/villages?parent_id=${communeId}`);\n//       const fetchedVillages = response.data.data;\n//       setVillages(fetchedVillages);\n//     } catch (error) {\n//       console.error('Error fetching village data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProvinceData();\n//   }, []);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     fetchDistrictData(provinceId);\n//     setSelectedProvince(provinces.find(pro => pro.id === parseInt(provinceId)));\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleDistrictSelect = (districtId) => {\n//     setSelectedDistrict(districts.find(dis => dis.id == parseInt(districtId)));\n//     fetchCommunesData(districtId);\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleCommuneSelect = (communeId) => {\n//     setSelectedCommune(communes.find(commune => commune.id == parseInt(communeId)));\n//     fetchVillagesData(communeId);\n//     setSelectedVillage('');\n//     setVillages([]);\n//   };\n\n//   const handleVillageSelect = (villageId) => {\n//     setSelectedVillage(villages.find(village => village.id == parseInt(villageId)));\n//     // fetchVillagesData(villageId);\n//   };\n\n//   const handleClear = () => {\n//     setSelectedProvince('');\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//     setResult({\n\n//     })\n//   };\n\n//   const handleSubmit = () => {\n\n//     setResult(true)\n\n//     setResult({\n//       province:selectedProvince,\n//       district:selectedDistrict,\n//       communes:selectedCommune,\n//       village:selectedVillage\n//     })\n\n//     setProvinces([])\n\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)} >\n//         <option value=\"\">Select a province</option>\n//         {provinces.map((province) => (\n//           <option key={province.id} value={province.id}>\n//             {province.name} / {province.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>District</h2>\n//       <select onChange={(e) => handleDistrictSelect(e.target.value)} >\n//         <option value=\"\">Select a district</option>\n//         {districts.map((district) => (\n//           <option key={district.id} value={district.id}>\n//             {district.name} / {district.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Communes</h2>\n//       <select onChange={(e) => handleCommuneSelect(e.target.value)} >\n//         <option value=\"\">Select a commune</option>\n//         {communes.map((commune) => (\n//           <option key={commune.id} value={commune.id}>\n//             {commune.name} / {commune.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Villages</h2>\n//       <select onChange={(e) => handleVillageSelect(e.target.value)} >\n//         <option value=\"\">Select a village</option>\n//         {villages.map((village) => (\n//           <option key={village.id} value={village.id}>\n//             {village.name} / {village.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <button type=\"button\" onClick={handleClear}>Clear</button>\n//       <button type=\"button\"  onClick={handleSubmit}>Submit</button>\n//       <div>\n//         {\n//           result \n\n//           ?\n\n//           <div>\n//             <h3>Your seleted</h3>\n//             <p>Province: {selectedProvince.name}</p>\n//             <p>district: {selectedDistrict.name}</p>\n//             <p>commune: {selectedCommune.name}</p>\n//             <p>village: {selectedVillage.name}</p>\n//           </div> \n\n//           : \n\n//           ''\n//         }\n//       </div>\n//     </div>\n\n//   );\n// };\n\n// export default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SelectOption","_s","provinces","setProvinces","districts","setDistricts","communes","setCommunes","villages","setVillages","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedCommune","setSelectedCommune","selectedVillage","setSelectedVillage","result","setResult","fetchProvinceData","response","get","fetchedProvinces","data","error","console","fetchDistrictData","provinceId","fetchedDistricts","fetchCommunesData","districtId","fetchedCommunes","fetchVillagesData","communeId","fetchedVillages","handleProvinceSelect","find","pro","id","parseInt","handleDistrictSelect","dis","handleCommuneSelect","commune","handleVillageSelect","villageId","village","handleClear","handleSubmit","province","district","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","name","name_km","type","onClick","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst SelectOption = () => {\n  const [provinces, setProvinces] = useState([]);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n\n  const [result, setResult] = useState(false);\n\n  const fetchProvinceData = async () => {\n    try {\n      const response = await axios.get('https://api.staging.goldenqueenhospital.com/v1/pumi');\n      const fetchedProvinces = response.data.data;\n      setProvinces(fetchedProvinces);\n    } catch (error) {\n      console.error('Error fetching province data:', error);\n    }\n  };\n\n  const fetchDistrictData = async (provinceId) => {\n    try {\n      const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/districts?parent_id=${provinceId}`);\n      const fetchedDistricts = response.data.data;\n      setDistricts(fetchedDistricts);\n    } catch (error) {\n      console.error('Error fetching district data:', error);\n    }\n  };\n\n  const fetchCommunesData = async (districtId) => {\n    try {\n      const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/communes?parent_id=${districtId}`);\n      const fetchedCommunes = response.data.data;\n      setCommunes(fetchedCommunes);\n    } catch (error) {\n      console.error('Error fetching commune data:', error);\n    }\n  };\n\n  const fetchVillagesData = async (communeId) => {\n    try {\n      const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/villages?parent_id=${communeId}`);\n      const fetchedVillages = response.data.data;\n      setVillages(fetchedVillages);\n    } catch (error) {\n      console.error('Error fetching village data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchProvinceData();\n  }, []);\n\n  const handleProvinceSelect = (provinceId) => {\n    fetchDistrictData(provinceId);\n    setSelectedProvince(provinces.find(pro => pro.id === parseInt(provinceId)));\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setDistricts([]);\n    setCommunes([]);\n    setVillages([]);\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    setSelectedDistrict(districts.find(dis => dis.id == parseInt(districtId)));\n    fetchCommunesData(districtId);\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setCommunes([]);\n    setVillages([]);\n  };\n\n  const handleCommuneSelect = (communeId) => {\n    setSelectedCommune(communes.find(commune => commune.id == parseInt(communeId)));\n    fetchVillagesData(communeId);\n    setSelectedVillage('');\n    setVillages([]);\n  };\n\n  const handleVillageSelect = (villageId) => {\n    setSelectedVillage(villages.find(village => village.id == parseInt(villageId)));\n    // fetchVillagesData(villageId);\n  };\n\n\n  const handleClear = () => {\n    setSelectedProvince('');\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n\n    setDistricts([]);\n    setCommunes([]);\n    setVillages([]);\n    setResult({\n      \n    })\n  };\n\n  const handleSubmit = () => {\n     \n    setResult(true)\n\n    setResult({\n      province:selectedProvince,\n      district:selectedDistrict,\n      communes:selectedCommune,\n      village:selectedVillage\n    })\n\n    setProvinces([])\n\n  };\n\n  return (\n    <div>\n      <h2>Province</h2>\n      <select onChange={(e) => handleProvinceSelect(e.target.value)} >\n        <option value=\"\">Select a province</option>\n        {provinces.map((province) => (\n          <option key={province.id} value={province.id}>\n            {province.name} / {province.name_km}\n          </option>\n        ))}\n      </select>\n\n      <h2>District</h2>\n      <select onChange={(e) => handleDistrictSelect(e.target.value)} >\n        <option value=\"\">Select a district</option>\n        {districts.map((district) => (\n          <option key={district.id} value={district.id}>\n            {district.name} / {district.name_km}\n          </option>\n        ))}\n      </select>\n\n      <h2>Communes</h2>\n      <select onChange={(e) => handleCommuneSelect(e.target.value)} >\n        <option value=\"\">Select a commune</option>\n        {communes.map((commune) => (\n          <option key={commune.id} value={commune.id}>\n            {commune.name} / {commune.name_km}\n          </option>\n        ))}\n      </select>\n\n      <h2>Villages</h2>\n      <select onChange={(e) => handleVillageSelect(e.target.value)} >\n        <option value=\"\">Select a village</option>\n        {villages.map((village) => (\n          <option key={village.id} value={village.id}>\n            {village.name} / {village.name_km}\n          </option>\n        ))}\n      </select>\n\n      <button type=\"button\" onClick={handleClear}>Clear</button>\n      <button type=\"button\"  onClick={handleSubmit}>Submit</button>\n      <div>\n        {\n          result \n          \n          ?\n\n          <div>\n            <h3>Your seleted</h3>\n            <p>Province: {selectedProvince.name}</p>\n            <p>district: {selectedDistrict.name}</p>\n            <p>commune: {selectedCommune.name}</p>\n            <p>village: {selectedVillage.name}</p>\n          </div> \n\n          : \n\n          ''\n        }\n      </div>\n    </div>\n\n    \n  );\n};\n\nexport default SelectOption;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SelectOption = () => {\n//   const [provinces, setProvinces] = useState([]);\n//   const [districts, setDistricts] = useState([]);\n//   const [communes, setCommunes] = useState([]);\n//   const [villages, setVillages] = useState([]);\n\n//   const [selectedProvince, setSelectedProvince] = useState('');\n//   const [selectedDistrict, setSelectedDistrict] = useState('');\n//   const [selectedCommune, setSelectedCommune] = useState('');\n//   const [selectedVillage, setSelectedVillage] = useState('');\n\n//   const [result, setResult] = useState(false);\n\n//   const fetchProvinceData = async () => {\n//     try {\n//       const response = await axios.get('https://api.staging.goldenqueenhospital.com/v1/pumi');\n//       const fetchedProvinces = response.data.data;\n//       setProvinces(fetchedProvinces);\n//     } catch (error) {\n//       console.error('Error fetching province data:', error);\n//     }\n//   };\n\n//   const fetchDistrictData = async (provinceId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/districts?parent_id=${provinceId}`);\n//       const fetchedDistricts = response.data.data;\n//       setDistricts(fetchedDistricts);\n//     } catch (error) {\n//       console.error('Error fetching district data:', error);\n//     }\n//   };\n\n//   const fetchCommunesData = async (districtId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/communes?parent_id=${districtId}`);\n//       const fetchedCommunes = response.data.data;\n//       setCommunes(fetchedCommunes);\n//     } catch (error) {\n//       console.error('Error fetching commune data:', error);\n//     }\n//   };\n\n//   const fetchVillagesData = async (communeId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/villages?parent_id=${communeId}`);\n//       const fetchedVillages = response.data.data;\n//       setVillages(fetchedVillages);\n//     } catch (error) {\n//       console.error('Error fetching village data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProvinceData();\n//   }, []);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     fetchDistrictData(provinceId);\n//     setSelectedProvince(provinces.find(pro => pro.id === parseInt(provinceId)));\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleDistrictSelect = (districtId) => {\n//     setSelectedDistrict(districts.find(dis => dis.id == parseInt(districtId)));\n//     fetchCommunesData(districtId);\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleCommuneSelect = (communeId) => {\n//     setSelectedCommune(communes.find(commune => commune.id == parseInt(communeId)));\n//     fetchVillagesData(communeId);\n//     setSelectedVillage('');\n//     setVillages([]);\n//   };\n\n//   const handleVillageSelect = (villageId) => {\n//     setSelectedVillage(villages.find(village => village.id == parseInt(villageId)));\n//     // fetchVillagesData(villageId);\n//   };\n\n\n//   const handleClear = () => {\n//     setSelectedProvince('');\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//     setResult({\n      \n//     })\n//   };\n\n//   const handleSubmit = () => {\n     \n//     setResult(true)\n\n//     setResult({\n//       province:selectedProvince,\n//       district:selectedDistrict,\n//       communes:selectedCommune,\n//       village:selectedVillage\n//     })\n\n//     setProvinces([])\n\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)} >\n//         <option value=\"\">Select a province</option>\n//         {provinces.map((province) => (\n//           <option key={province.id} value={province.id}>\n//             {province.name} / {province.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>District</h2>\n//       <select onChange={(e) => handleDistrictSelect(e.target.value)} >\n//         <option value=\"\">Select a district</option>\n//         {districts.map((district) => (\n//           <option key={district.id} value={district.id}>\n//             {district.name} / {district.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Communes</h2>\n//       <select onChange={(e) => handleCommuneSelect(e.target.value)} >\n//         <option value=\"\">Select a commune</option>\n//         {communes.map((commune) => (\n//           <option key={commune.id} value={commune.id}>\n//             {commune.name} / {commune.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Villages</h2>\n//       <select onChange={(e) => handleVillageSelect(e.target.value)} >\n//         <option value=\"\">Select a village</option>\n//         {villages.map((village) => (\n//           <option key={village.id} value={village.id}>\n//             {village.name} / {village.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <button type=\"button\" onClick={handleClear}>Clear</button>\n//       <button type=\"button\"  onClick={handleSubmit}>Submit</button>\n//       <div>\n//         {\n//           result \n          \n//           ?\n\n//           <div>\n//             <h3>Your seleted</h3>\n//             <p>Province: {selectedProvince.name}</p>\n//             <p>district: {selectedDistrict.name}</p>\n//             <p>commune: {selectedCommune.name}</p>\n//             <p>village: {selectedVillage.name}</p>\n//           </div> \n\n//           : \n\n//           ''\n//         }\n//       </div>\n//     </div>\n\n    \n//   );\n// };\n\n// export default SelectOption;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMyB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAC,qDAAqD,CAAC;MACvF,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI;MAC3CrB,YAAY,CAACoB,gBAAgB,CAAC;IAChC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC9C,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,2EAA0EM,UAAW,EAAC,CAAC;MACzH,MAAMC,gBAAgB,GAAGR,QAAQ,CAACG,IAAI,CAACA,IAAI;MAC3CnB,YAAY,CAACwB,gBAAgB,CAAC;IAChC,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC9C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,0EAAyES,UAAW,EAAC,CAAC;MACxH,MAAMC,eAAe,GAAGX,QAAQ,CAACG,IAAI,CAACA,IAAI;MAC1CjB,WAAW,CAACyB,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAMQ,iBAAiB,GAAG,MAAOC,SAAS,IAAK;IAC7C,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAG,CAAE,0EAAyEY,SAAU,EAAC,CAAC;MACvH,MAAMC,eAAe,GAAGd,QAAQ,CAACG,IAAI,CAACA,IAAI;MAC1Cf,WAAW,CAAC0B,eAAe,CAAC;IAC9B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdwB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,oBAAoB,GAAIR,UAAU,IAAK;IAC3CD,iBAAiB,CAACC,UAAU,CAAC;IAC7BjB,mBAAmB,CAACT,SAAS,CAACmC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKC,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;IAC3Ef,mBAAmB,CAAC,EAAE,CAAC;IACvBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,kBAAkB,CAAC,EAAE,CAAC;IACtBZ,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMgC,oBAAoB,GAAIV,UAAU,IAAK;IAC3ClB,mBAAmB,CAACT,SAAS,CAACiC,IAAI,CAACK,GAAG,IAAIA,GAAG,CAACH,EAAE,IAAIC,QAAQ,CAACT,UAAU,CAAC,CAAC,CAAC;IAC1ED,iBAAiB,CAACC,UAAU,CAAC;IAC7BhB,kBAAkB,CAAC,EAAE,CAAC;IACtBE,kBAAkB,CAAC,EAAE,CAAC;IACtBV,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMkC,mBAAmB,GAAIT,SAAS,IAAK;IACzCnB,kBAAkB,CAACT,QAAQ,CAAC+B,IAAI,CAACO,OAAO,IAAIA,OAAO,CAACL,EAAE,IAAIC,QAAQ,CAACN,SAAS,CAAC,CAAC,CAAC;IAC/ED,iBAAiB,CAACC,SAAS,CAAC;IAC5BjB,kBAAkB,CAAC,EAAE,CAAC;IACtBR,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMoC,mBAAmB,GAAIC,SAAS,IAAK;IACzC7B,kBAAkB,CAACT,QAAQ,CAAC6B,IAAI,CAACU,OAAO,IAAIA,OAAO,CAACR,EAAE,IAAIC,QAAQ,CAACM,SAAS,CAAC,CAAC,CAAC;IAC/E;EACF,CAAC;EAGD,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxBrC,mBAAmB,CAAC,EAAE,CAAC;IACvBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,kBAAkB,CAAC,EAAE,CAAC;IAEtBZ,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,EAAE,CAAC;IACfE,WAAW,CAAC,EAAE,CAAC;IACfU,SAAS,CAAC,CAEV,CAAC,CAAC;EACJ,CAAC;EAED,MAAM8B,YAAY,GAAGA,CAAA,KAAM;IAEzB9B,SAAS,CAAC,IAAI,CAAC;IAEfA,SAAS,CAAC;MACR+B,QAAQ,EAACxC,gBAAgB;MACzByC,QAAQ,EAACvC,gBAAgB;MACzBN,QAAQ,EAACQ,eAAe;MACxBiC,OAAO,EAAC/B;IACV,CAAC,CAAC;IAEFb,YAAY,CAAC,EAAE,CAAC;EAElB,CAAC;EAED,oBACEJ,OAAA;IAAAqD,QAAA,gBACErD,OAAA;MAAAqD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzD,OAAA;MAAQ0D,QAAQ,EAAGC,CAAC,IAAKtB,oBAAoB,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC5DrD,OAAA;QAAQ6D,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1CtD,SAAS,CAAC2D,GAAG,CAAEX,QAAQ,iBACtBnD,OAAA;QAA0B6D,KAAK,EAAEV,QAAQ,CAACX,EAAG;QAAAa,QAAA,GAC1CF,QAAQ,CAACY,IAAI,EAAC,KAAG,EAACZ,QAAQ,CAACa,OAAO;MAAA,GADxBb,QAAQ,CAACX,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETzD,OAAA;MAAAqD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzD,OAAA;MAAQ0D,QAAQ,EAAGC,CAAC,IAAKjB,oBAAoB,CAACiB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC5DrD,OAAA;QAAQ6D,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1CpD,SAAS,CAACyD,GAAG,CAAEV,QAAQ,iBACtBpD,OAAA;QAA0B6D,KAAK,EAAET,QAAQ,CAACZ,EAAG;QAAAa,QAAA,GAC1CD,QAAQ,CAACW,IAAI,EAAC,KAAG,EAACX,QAAQ,CAACY,OAAO;MAAA,GADxBZ,QAAQ,CAACZ,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETzD,OAAA;MAAAqD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzD,OAAA;MAAQ0D,QAAQ,EAAGC,CAAC,IAAKf,mBAAmB,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC3DrD,OAAA;QAAQ6D,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzClD,QAAQ,CAACuD,GAAG,CAAEjB,OAAO,iBACpB7C,OAAA;QAAyB6D,KAAK,EAAEhB,OAAO,CAACL,EAAG;QAAAa,QAAA,GACxCR,OAAO,CAACkB,IAAI,EAAC,KAAG,EAAClB,OAAO,CAACmB,OAAO;MAAA,GADtBnB,OAAO,CAACL,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETzD,OAAA;MAAAqD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzD,OAAA;MAAQ0D,QAAQ,EAAGC,CAAC,IAAKb,mBAAmB,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC3DrD,OAAA;QAAQ6D,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzChD,QAAQ,CAACqD,GAAG,CAAEd,OAAO,iBACpBhD,OAAA;QAAyB6D,KAAK,EAAEb,OAAO,CAACR,EAAG;QAAAa,QAAA,GACxCL,OAAO,CAACe,IAAI,EAAC,KAAG,EAACf,OAAO,CAACgB,OAAO;MAAA,GADtBhB,OAAO,CAACR,EAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETzD,OAAA;MAAQiE,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEjB,WAAY;MAAAI,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DzD,OAAA;MAAQiE,IAAI,EAAC,QAAQ;MAAEC,OAAO,EAAEhB,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DzD,OAAA;MAAAqD,QAAA,EAEIlC,MAAM,gBAINnB,OAAA;QAAAqD,QAAA,gBACErD,OAAA;UAAAqD,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBzD,OAAA;UAAAqD,QAAA,GAAG,YAAU,EAAC1C,gBAAgB,CAACoD,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCzD,OAAA;UAAAqD,QAAA,GAAG,YAAU,EAACxC,gBAAgB,CAACkD,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCzD,OAAA;UAAAqD,QAAA,GAAG,WAAS,EAACtC,eAAe,CAACgD,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCzD,OAAA;UAAAqD,QAAA,GAAG,WAAS,EAACpC,eAAe,CAAC8C,IAAI;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,GAIN;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAIV,CAAC;AAACvD,EAAA,CA1LID,YAAY;AAAAkE,EAAA,GAAZlE,YAAY;AA4LlB,eAAeA,YAAY;;AAI3B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}