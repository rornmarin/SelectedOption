{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport provicesJson from './provinces.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectOption = () => {\n  _s();\n  const [provincesData, setProvincesData] = useState(null);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchProvincesData = async () => {\n  //     try {\n  //       const response = await fetch(provicesJson);\n  //       const data = await response.json();\n  //       setProvincesData(data.provinces);\n  //     } catch (error) {\n  //       console.error('Error fetching provinces data:', error);\n  //     }\n  //   };\n\n  //   console.log(fetchProvincesData());\n  // }, []);\n\n  // const handleProvinceSelect = (provinceId) => {\n  //   const selected = provincesData && provincesData[provinceId];\n  //   setSelectedProvince(selected);\n  // };\n\n  console.log(provicesJson);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h2>Province</h2>\n    //   <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n    //     <option value=\"\">Select a Province</option>\n    //     {provincesData &&\n    //       Object.keys(provincesData).map((provinceId) => (\n    //         <option key={provinceId} value={provinceId}>\n    //           {provincesData[provinceId].name.km}\n    //         </option>\n    //       ))}\n    //   </select>\n    //   {selectedProvince && (\n    //     <div>\n    //       <h2>Selected Province</h2>\n    //       <p>\n    //         <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n    //       </p>\n    //       <p>\n    //         <strong>Administrative Unit:</strong>{' '}\n    //         {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n    //       </p>\n    //     </div>\n    //   )}\n    // </div>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(SelectOption, \"wD4HTjWRMoRb/3FU13Yh4xDE7J0=\");\n_c = SelectOption;\nexport default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","useEffect","provicesJson","jsxDEV","_jsxDEV","SelectOption","_s","provincesData","setProvincesData","selectedProvince","setSelectedProvince","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport provicesJson from './provinces.json'\n\nconst SelectOption = () => {\n  const [provincesData, setProvincesData] = useState(null);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n\n  // useEffect(() => {\n  //   const fetchProvincesData = async () => {\n  //     try {\n  //       const response = await fetch(provicesJson);\n  //       const data = await response.json();\n  //       setProvincesData(data.provinces);\n  //     } catch (error) {\n  //       console.error('Error fetching provinces data:', error);\n  //     }\n  //   };\n\n  //   console.log(fetchProvincesData());\n  // }, []);\n\n  // const handleProvinceSelect = (provinceId) => {\n  //   const selected = provincesData && provincesData[provinceId];\n  //   setSelectedProvince(selected);\n  // };\n\n  console.log(provicesJson)\n\n  return (\n    // <div>\n    //   <h2>Province</h2>\n    //   <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n    //     <option value=\"\">Select a Province</option>\n    //     {provincesData &&\n    //       Object.keys(provincesData).map((provinceId) => (\n    //         <option key={provinceId} value={provinceId}>\n    //           {provincesData[provinceId].name.km}\n    //         </option>\n    //       ))}\n    //   </select>\n\n    //   {selectedProvince && (\n    //     <div>\n    //       <h2>Selected Province</h2>\n    //       <p>\n    //         <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n    //       </p>\n    //       <p>\n    //         <strong>Administrative Unit:</strong>{' '}\n    //         {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n    //       </p>\n    //     </div>\n    //   )}\n    // </div>\n    <div></div>\n  );\n};\n\nexport default SelectOption;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEAW,OAAO,CAACC,GAAG,CAACV,YAAY,CAAC;EAEzB;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,OAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU;EAAC;AAEf,CAAC;AAACV,EAAA,CArDID,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}