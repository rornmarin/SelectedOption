{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\nimport Select from '../components/select';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoExtractor = data => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name\n    };\n  });\n};\n// console.log(villagesJson);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces');\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts');\nconst communesData = geoExtractor(communesJosn.communes, 'communes');\nconst villagsData = geoExtractor(villagesJson.villages, 'villages');\n// console.log(communesData);\n\nconst SelectOption = () => {\n  _s();\n  const [provinces, setProvinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n  const [result, setResult] = useState(false);\n  const handleProvinceSelect = provinceId => {\n    const province = provinces.find(obj => obj.id === provinceId);\n    setSelectedProvince(province);\n    console.log(province);\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)));\n    setCommunes([]);\n    setVillages([]);\n  };\n  const handleDistrictSelect = districtId => {\n    const district = districts.find(district => district.id === districtId);\n    setSelectedDistrict(district);\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)));\n    setVillages([]);\n  };\n  const handleCommuneSelect = communeId => {\n    const selectCommue = communes.find(commune => commune.id === communeId);\n    setSelectedCommune(selectCommue);\n    setSelectedVillage('');\n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)));\n  };\n  const handleVillageSelect = villageId => {\n    const selectVillage = villages.find(village => village.id === villageId);\n    setSelectedVillage(selectVillage);\n  };\n  const handleSubmit = () => {\n    setResult(true);\n    console.log(selectedProvince);\n\n    // setResult({\n    //   province:selectedProvince.name.latin,\n    //   district:selectedDistrict.name.latin,\n    //   commune:selectedCommune.name.latin,\n    //   village:selectedVillage.name.latin,\n    // })\n\n    setProvinces([]);\n  };\n  const handleClear = () => {\n    setSelectedProvince('');\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setProvinces([]);\n    setDistricts([]);\n    setCommunes([]);\n    setVillages([]);\n    setResult({});\n    setProvinces(provinceData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      data: provinces,\n      onSelect: handleProvinceSelect,\n      selectOption: 'Select province'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"District\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      data: districts,\n      onSelect: handleDistrictSelect,\n      selectOption: 'Select district'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Commune\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      data: communes,\n      onSelect: handleCommuneSelect,\n      selectOption: 'Select commune'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"village\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      data: villages,\n      onSelect: handleVillageSelect,\n      selectOption: 'Select village'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: result ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"province:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedProvince.name.latin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedDistrict.name.latin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedCommune.name.latin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedVillage.name.latin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"pxtv7t9fYu3A2BqQ15tmODbYseA=\");\n_c = SelectOption;\nexport default SelectOption;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SelectOption = () => {\n//   const [provinces, setProvinces] = useState([]);\n//   const [districts, setDistricts] = useState([]);\n//   const [communes, setCommunes] = useState([]);\n//   const [villages, setVillages] = useState([]);\n\n//   const [selectedProvince, setSelectedProvince] = useState('');\n//   const [selectedDistrict, setSelectedDistrict] = useState('');\n//   const [selectedCommune, setSelectedCommune] = useState('');\n//   const [selectedVillage, setSelectedVillage] = useState('');\n\n//   const [result, setResult] = useState(false);\n\n//   const fetchProvinceData = async () => {\n//     try {\n//       const response = await axios.get('https://api.staging.goldenqueenhospital.com/v1/pumi');\n//       const fetchedProvinces = response.data.data;\n//       setProvinces(fetchedProvinces);\n//     } catch (error) {\n//       console.error('Error fetching province data:', error);\n//     }\n//   };\n\n//   const fetchDistrictData = async (provinceId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/districts?parent_id=${provinceId}`);\n//       const fetchedDistricts = response.data.data;\n//       setDistricts(fetchedDistricts);\n//     } catch (error) {\n//       console.error('Error fetching district data:', error);\n//     }\n//   };\n\n//   const fetchCommunesData = async (districtId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/communes?parent_id=${districtId}`);\n//       const fetchedCommunes = response.data.data;\n//       setCommunes(fetchedCommunes);\n//     } catch (error) {\n//       console.error('Error fetching commune data:', error);\n//     }\n//   };\n\n//   const fetchVillagesData = async (communeId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/villages?parent_id=${communeId}`);\n//       const fetchedVillages = response.data.data;\n//       setVillages(fetchedVillages);\n//     } catch (error) {\n//       console.error('Error fetching village data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProvinceData();\n//   }, []);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     fetchDistrictData(provinceId);\n//     setSelectedProvince(provinces.find(pro => pro.id === parseInt(provinceId)));\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleDistrictSelect = (districtId) => {\n//     setSelectedDistrict(districts.find(dis => dis.id == parseInt(districtId)));\n//     fetchCommunesData(districtId);\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleCommuneSelect = (communeId) => {\n//     setSelectedCommune(communes.find(commune => commune.id == parseInt(communeId)));\n//     fetchVillagesData(communeId);\n//     setSelectedVillage('');\n//     setVillages([]);\n//   };\n\n//   const handleVillageSelect = (villageId) => {\n//     setSelectedVillage(villages.find(village => village.id == parseInt(villageId)));\n//     // fetchVillagesData(villageId);\n//   };\n\n//   const handleClear = () => {\n//     setSelectedProvince('');\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//     setResult({\n\n//     })\n//   };\n\n//   const handleSubmit = () => {\n\n//     setResult(true)\n\n//     setResult({\n//       province:selectedProvince,\n//       district:selectedDistrict,\n//       communes:selectedCommune,\n//       village:selectedVillage\n//     })\n\n//     setProvinces([])\n\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)} >\n//         <option value=\"\">Select a province</option>\n//         {provinces.map((province) => (\n//           <option key={province.id} value={province.id}>\n//             {province.name} / {province.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>District</h2>\n//       <select onChange={(e) => handleDistrictSelect(e.target.value)} >\n//         <option value=\"\">Select a district</option>\n//         {districts.map((district) => (\n//           <option key={district.id} value={district.id}>\n//             {district.name} / {district.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Communes</h2>\n//       <select onChange={(e) => handleCommuneSelect(e.target.value)} >\n//         <option value=\"\">Select a commune</option>\n//         {communes.map((commune) => (\n//           <option key={commune.id} value={commune.id}>\n//             {commune.name} / {commune.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Villages</h2>\n//       <select onChange={(e) => handleVillageSelect(e.target.value)} >\n//         <option value=\"\">Select a village</option>\n//         {villages.map((village) => (\n//           <option key={village.id} value={village.id}>\n//             {village.name} / {village.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <button type=\"button\" onClick={handleClear}>Clear</button>\n//       <button type=\"button\"  onClick={handleSubmit}>Submit</button>\n//       <div>\n//         {\n//           result \n\n//           ?\n\n//           <div>\n//             <h3>Your seleted</h3>\n//             <p>Province: {selectedProvince.name}</p>\n//             <p>district: {selectedDistrict.name}</p>\n//             <p>commune: {selectedCommune.name}</p>\n//             <p>village: {selectedVillage.name}</p>\n//           </div> \n\n//           : \n\n//           ''\n//         }\n//       </div>\n//     </div>\n\n//   );\n// };\n\n// export default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsjSON","communesJosn","villagesJson","Select","jsxDEV","_jsxDEV","geoExtractor","data","Object","keys","map","key","id","name","provinceData","provinces","districtsData","districts","communesData","communes","villagsData","villages","SelectOption","_s","setProvinces","setDistricts","setCommunes","setVillages","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedCommune","setSelectedCommune","selectedVillage","setSelectedVillage","result","setResult","handleProvinceSelect","provinceId","province","find","obj","console","log","filter","district","startsWith","handleDistrictSelect","districtId","commune","handleCommuneSelect","communeId","selectCommue","village","handleVillageSelect","villageId","selectVillage","handleSubmit","handleClear","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","selectOption","type","onClick","latin","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\nimport Select from '../components/select'\nimport './style.css'\n\nconst geoExtractor = (data) => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name \n    }\n  })\n}\n// console.log(villagesJson);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces')\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts')\nconst communesData = geoExtractor(communesJosn.communes, 'communes')\nconst villagsData = geoExtractor(villagesJson.villages, 'villages')\n// console.log(communesData);\n\nconst SelectOption = () => {\n\n  const [provinces,setProvinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n\n  const [result, setResult] = useState(false);\n\n\n  const handleProvinceSelect = (provinceId) => {\n    const province = provinces.find(obj => obj.id === provinceId)\n    setSelectedProvince(province);\n    console.log(province);\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)))\n    setCommunes([])\n    setVillages([])\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    const district = districts.find(district => district.id === districtId)\n    setSelectedDistrict(district);\n    setSelectedCommune('');\n    setSelectedVillage('');\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)))\n    setVillages([])\n  };\n\n\n  const handleCommuneSelect = (communeId) => {\n    const selectCommue = communes.find(commune => commune.id === communeId);\n    setSelectedCommune(selectCommue);\n    setSelectedVillage(''); \n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)))\n  }\n\n  const handleVillageSelect = (villageId) => {\n    const selectVillage = villages.find(village => village.id === villageId);\n    setSelectedVillage(selectVillage)\n  }\n\n  const handleSubmit = () => {\n\n    setResult(true)\n\n    console.log(selectedProvince);\n\n    // setResult({\n    //   province:selectedProvince.name.latin,\n    //   district:selectedDistrict.name.latin,\n    //   commune:selectedCommune.name.latin,\n    //   village:selectedVillage.name.latin,\n    // })\n\n    setProvinces([])\n  };\n\n  const handleClear = () => {\n\n    setSelectedProvince('');\n    setSelectedDistrict('');\n    setSelectedCommune('');\n    setSelectedVillage('');\n\n    setProvinces([]);\n    setDistricts([]);\n    setCommunes([]);\n    setVillages([]);\n    setResult({\n\n    });\n    setProvinces(provinceData)\n    \n  };\n\n\n  return (\n    <div>\n\n      <h2>Province</h2>\n\n      <Select data={provinces} onSelect={handleProvinceSelect} selectOption={'Select province'} />\n\n      <h2>District</h2>\n\n      <Select data={districts} onSelect={handleDistrictSelect} selectOption={'Select district'} />\n\n      <h2>Commune</h2>\n\n      <Select data={communes} onSelect={handleCommuneSelect} selectOption={'Select commune'} />\n\n      <h2>village</h2>\n\n      <Select data={villages} onSelect={handleVillageSelect} selectOption={'Select village'}/>\n\n      <div>\n        <button type=\"button\" onClick={handleSubmit}>Submit</button>\n        <button type=\"button\" onClick={handleClear}>Clear</button>\n      </div>\n\n      <div>\n          \n          {\n            result\n\n            ?\n\n            <div>\n\n              <h3>Your selected</h3>\n              <div>\n                <p>province:</p>\n                <p>{selectedProvince.name.latin}</p>\n              </div>\n              <p>{selectedDistrict.name.latin}</p>\n              <p>{selectedCommune.name.latin}</p>              \n              <p>{selectedVillage.name.latin}</p>\n            </div>\n\n            :\n\n            ''\n\n          }\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default SelectOption;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SelectOption = () => {\n//   const [provinces, setProvinces] = useState([]);\n//   const [districts, setDistricts] = useState([]);\n//   const [communes, setCommunes] = useState([]);\n//   const [villages, setVillages] = useState([]);\n\n//   const [selectedProvince, setSelectedProvince] = useState('');\n//   const [selectedDistrict, setSelectedDistrict] = useState('');\n//   const [selectedCommune, setSelectedCommune] = useState('');\n//   const [selectedVillage, setSelectedVillage] = useState('');\n\n//   const [result, setResult] = useState(false);\n\n//   const fetchProvinceData = async () => {\n//     try {\n//       const response = await axios.get('https://api.staging.goldenqueenhospital.com/v1/pumi');\n//       const fetchedProvinces = response.data.data;\n//       setProvinces(fetchedProvinces);\n//     } catch (error) {\n//       console.error('Error fetching province data:', error);\n//     }\n//   };\n\n//   const fetchDistrictData = async (provinceId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/districts?parent_id=${provinceId}`);\n//       const fetchedDistricts = response.data.data;\n//       setDistricts(fetchedDistricts);\n//     } catch (error) {\n//       console.error('Error fetching district data:', error);\n//     }\n//   };\n\n//   const fetchCommunesData = async (districtId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/communes?parent_id=${districtId}`);\n//       const fetchedCommunes = response.data.data;\n//       setCommunes(fetchedCommunes);\n//     } catch (error) {\n//       console.error('Error fetching commune data:', error);\n//     }\n//   };\n\n//   const fetchVillagesData = async (communeId) => {\n//     try {\n//       const response = await axios.get(`https://api.staging.goldenqueenhospital.com/v1/pumi/villages?parent_id=${communeId}`);\n//       const fetchedVillages = response.data.data;\n//       setVillages(fetchedVillages);\n//     } catch (error) {\n//       console.error('Error fetching village data:', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchProvinceData();\n//   }, []);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     fetchDistrictData(provinceId);\n//     setSelectedProvince(provinces.find(pro => pro.id === parseInt(provinceId)));\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleDistrictSelect = (districtId) => {\n//     setSelectedDistrict(districts.find(dis => dis.id == parseInt(districtId)));\n//     fetchCommunesData(districtId);\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n//     setCommunes([]);\n//     setVillages([]);\n//   };\n\n//   const handleCommuneSelect = (communeId) => {\n//     setSelectedCommune(communes.find(commune => commune.id == parseInt(communeId)));\n//     fetchVillagesData(communeId);\n//     setSelectedVillage('');\n//     setVillages([]);\n//   };\n\n//   const handleVillageSelect = (villageId) => {\n//     setSelectedVillage(villages.find(village => village.id == parseInt(villageId)));\n//     // fetchVillagesData(villageId);\n//   };\n\n\n//   const handleClear = () => {\n//     setSelectedProvince('');\n//     setSelectedDistrict('');\n//     setSelectedCommune('');\n//     setSelectedVillage('');\n\n//     setDistricts([]);\n//     setCommunes([]);\n//     setVillages([]);\n//     setResult({\n      \n//     })\n//   };\n\n//   const handleSubmit = () => {\n     \n//     setResult(true)\n\n//     setResult({\n//       province:selectedProvince,\n//       district:selectedDistrict,\n//       communes:selectedCommune,\n//       village:selectedVillage\n//     })\n\n//     setProvinces([])\n\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)} >\n//         <option value=\"\">Select a province</option>\n//         {provinces.map((province) => (\n//           <option key={province.id} value={province.id}>\n//             {province.name} / {province.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>District</h2>\n//       <select onChange={(e) => handleDistrictSelect(e.target.value)} >\n//         <option value=\"\">Select a district</option>\n//         {districts.map((district) => (\n//           <option key={district.id} value={district.id}>\n//             {district.name} / {district.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Communes</h2>\n//       <select onChange={(e) => handleCommuneSelect(e.target.value)} >\n//         <option value=\"\">Select a commune</option>\n//         {communes.map((commune) => (\n//           <option key={commune.id} value={commune.id}>\n//             {commune.name} / {commune.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <h2>Villages</h2>\n//       <select onChange={(e) => handleVillageSelect(e.target.value)} >\n//         <option value=\"\">Select a village</option>\n//         {villages.map((village) => (\n//           <option key={village.id} value={village.id}>\n//             {village.name} / {village.name_km}\n//           </option>\n//         ))}\n//       </select>\n\n//       <button type=\"button\" onClick={handleClear}>Clear</button>\n//       <button type=\"button\"  onClick={handleSubmit}>Submit</button>\n//       <div>\n//         {\n//           result \n          \n//           ?\n\n//           <div>\n//             <h3>Your seleted</h3>\n//             <p>Province: {selectedProvince.name}</p>\n//             <p>district: {selectedDistrict.name}</p>\n//             <p>commune: {selectedCommune.name}</p>\n//             <p>village: {selectedVillage.name}</p>\n//           </div> \n\n//           : \n\n//           ''\n//         }\n//       </div>\n//     </div>\n\n    \n//   );\n// };\n\n// export default SelectOption;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}