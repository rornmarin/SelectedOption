{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoExtractor = data => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name\n    };\n  });\n};\nconsole.log(villagesJson);\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces');\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts');\nconst communesData = geoExtractor(communesJosn.communes, 'communes');\nconst villagsData = geoExtractor(villagesJson.villages, 'villages');\n// console.log(communesData);\n\nconst SelectOption = () => {\n  _s();\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n  const handleProvinceSelect = provinceId => {\n    const province = provinces.find(obj => obj.id === provinceId);\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)));\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)));\n  };\n  const handleCommuneSelect = communeId => {\n    const selectCommue = communesJosn.communes[communeId];\n    setSelectedCommune(selectCommue);\n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)));\n  };\n  const handleVillageSelect = villageId => {\n    const selectVillage = villagesJson.villages[villageId];\n    setSelectedVillage(selectVillage);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleProvinceSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: province.id,\n        children: [province.name.latin, \" / \", province.name.km]\n      }, province.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"District:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleDistrictSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a district\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: district.id,\n        children: [district.name.latin, \" / \", district.name.km]\n      }, district.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Commune:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleCommuneSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Commune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), communes.map(commune => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: commune.id,\n        children: [commune.name.latin, \" / \", commune.name.km]\n      }, commune.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"village:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleVillageSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), villages.map(village => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: village.id,\n        children: [village.name.latin, \" / \", village.name.km]\n      }, village.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), selectedProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your selected option is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Province: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), selectedProvince.name.latin, \" (\", selectedProvince.name.km, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"B2J2LI3S39askIVpLdyc0YJzlhg=\");\n_c = SelectOption;\nexport default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsjSON","communesJosn","villagesJson","jsxDEV","_jsxDEV","geoExtractor","data","Object","keys","map","key","id","name","console","log","provinceData","provinces","districtsData","districts","communesData","communes","villagsData","villages","SelectOption","_s","setDistricts","setCommunes","setVillages","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedCommune","setSelectedCommune","selectedVillage","setSelectedVillage","handleProvinceSelect","provinceId","province","find","obj","filter","district","startsWith","handleDistrictSelect","districtId","selected","commune","handleCommuneSelect","communeId","selectCommue","village","handleVillageSelect","villageId","selectVillage","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","latin","km","type","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\n\nconst geoExtractor = (data) => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name \n    }\n  })\n}\nconsole.log(villagesJson);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces')\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts')\nconst communesData = geoExtractor(communesJosn.communes, 'communes')\nconst villagsData = geoExtractor(villagesJson.villages, 'villages')\n// console.log(communesData);\n\nconst SelectOption = () => {\n\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n\n\n  const handleProvinceSelect = (provinceId) => {\n    const province = provinces.find(obj => obj.id === provinceId)\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)))\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)))\n  };\n\n  const handleCommuneSelect = (communeId) => {\n    const selectCommue = communesJosn.communes[communeId];\n    setSelectedCommune(selectCommue); \n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)))\n  }\n\n  const handleVillageSelect = (villageId) => {\n    const selectVillage = villagesJson.villages[villageId];\n    setSelectedVillage(selectVillage)\n  }\n\n  return (\n    <div>\n      <h2>Province:</h2>\n      <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n        <option value=\"\">Select a province</option>\n        {provinces.map((province) => (\n          <option key={province.id} value={province.id}>\n            {province.name.latin} / {province.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>District:</h2>\n      <select onChange={(e) => handleDistrictSelect(e.target.value)}>\n        <option value=\"\">Select a district</option>\n        {districts.map((district) => (\n          <option key={district.id} value={district.id}>\n            {district.name.latin} / {district.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>Commune:</h2>\n      <select onChange={(e) => handleCommuneSelect(e.target.value)}>\n        <option value=\"\">Select a Commune</option>\n        {communes.map((commune) => (\n          <option key={commune.id} value={commune.id}>\n            {commune.name.latin} / {commune.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>village:</h2>\n      <select onChange={(e) => handleVillageSelect(e.target.value)}>\n        <option value=\"\">Select a village</option>\n        {villages.map((village) => (\n          <option key={village.id} value={village.id}>\n            {village.name.latin} / {village.name.km}\n          </option>\n        ))}\n      </select>\n\n      <button type=\"submit\"></button>\n\n      {selectedProvince && (\n        <div>\n          <h2>Your selected option is:</h2>\n          <p>\n            <strong>Province: </strong>\n            {selectedProvince.name.latin} ({selectedProvince.name.km})\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SelectOption;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}