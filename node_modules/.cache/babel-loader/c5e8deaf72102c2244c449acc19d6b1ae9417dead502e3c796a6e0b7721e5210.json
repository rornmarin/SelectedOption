{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoExtractor = data => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name\n    };\n  });\n};\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces');\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts');\nconst communesData = geoExtractor(communesJosn.communes, 'communes');\nconst villagsData = geoExtractor(villagesJson.villages, 'villages');\nconst SelectOption = () => {\n  _s();\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n  const handleProvinceSelect = provinceId => {\n    const province = provinces.find(obj => obj.id === provinceId);\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)));\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)));\n  };\n  const handleCommuneSelect = communeId => {\n    const selectCommue = communesJosn.communes[communeId];\n    setSelectedCommune(selectCommue);\n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)));\n  };\n  const handleVillageSelect = villageId => {\n    const selectVillage = villagesJson.villages[villageId];\n    setSelectedVillage(selectVillage);\n  };\n  const handleSubmit = () => {\n    // Perform actions with selected values\n    console.log(\"Selected values:\", selectedProvince, selectedDistrict, selectedCommune, selectedVillage);\n    // You can perform further actions here with the selected values\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), selectedProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your selected option is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Province: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), selectedProvince.name.latin, \" (\", selectedProvince.name.km, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"B2J2LI3S39askIVpLdyc0YJzlhg=\");\n_c = SelectOption;\nexport default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsjSON","communesJosn","villagesJson","jsxDEV","_jsxDEV","geoExtractor","data","Object","keys","map","key","id","name","provinceData","provinces","districtsData","districts","communesData","communes","villagsData","villages","SelectOption","_s","setDistricts","setCommunes","setVillages","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedCommune","setSelectedCommune","selectedVillage","setSelectedVillage","handleProvinceSelect","provinceId","province","find","obj","filter","district","startsWith","handleDistrictSelect","districtId","selected","commune","handleCommuneSelect","communeId","selectCommue","village","handleVillageSelect","villageId","selectVillage","handleSubmit","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","latin","km","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\n\nconst geoExtractor = (data) => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name \n    }\n  })\n}\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces')\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts')\nconst communesData = geoExtractor(communesJosn.communes, 'communes')\nconst villagsData = geoExtractor(villagesJson.villages, 'villages')\n\nconst SelectOption = () => {\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n\n  const handleProvinceSelect = (provinceId) => {\n    const province = provinces.find(obj => obj.id === provinceId)\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)))\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)))\n  };\n\n  const handleCommuneSelect = (communeId) => {\n    const selectCommue = communesJosn.communes[communeId];\n    setSelectedCommune(selectCommue); \n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)))\n  }\n\n  const handleVillageSelect = (villageId) => {\n    const selectVillage = villagesJson.villages[villageId];\n    setSelectedVillage(selectVillage)\n  }\n\n  const handleSubmit = () => {\n    // Perform actions with selected values\n    console.log(\"Selected values:\", selectedProvince, selectedDistrict, selectedCommune, selectedVillage);\n    // You can perform further actions here with the selected values\n  };\n\n  return (\n    <div>\n      {/* ...Existing select dropdowns... */}\n\n      {/* Submit button */}\n      <button onClick={handleSubmit}>Submit</button>\n\n      {/* Display selected province */}\n      {selectedProvince && (\n        <div>\n          <h2>Your selected option is:</h2>\n          <p>\n            <strong>Province: </strong>\n            {selectedProvince.name.latin} ({selectedProvince.name.km})\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SelectOption;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}