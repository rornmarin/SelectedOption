{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectOption = () => {\n  _s();\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n  const handlProvinceSelect = provinceId => {\n    const selected = provincesJson.provinces[provinceId];\n    setSelectedProvince(selected);\n    setSelectedDistrict(null);\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n  };\n\n  // console.log(provincesJson);\n  // console.log(districtsjSON);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handlProvinceSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), Object.keys(provincesJson.provinces).map(provinceId => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: provinceId,\n        children: [provincesJson.provinces[provinceId].name.latin, \" (\", provincesJson.provinces[provinceId].name.km, \")\"]\n      }, provinceId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleDistrictSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a districts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), Object.keys(districtsjSON.districts).map(districtIdId => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: districtIdId,\n        children: [districtsjSON.districts[districtIdId].name.latin, \" \"]\n      }, districtIdId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), selectedProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your selected option is :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Province: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this), selectedProvince.name.latin, \" (\", selectedProvince.name.km, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"THtDlbOi3yg+R8smTMQE/Yr/RcE=\");\n_c = SelectOption;\nexport default SelectOption;\n\n// import React, { useState } from 'react';\n// import provincesJson from './provinces.json';\n\n// const SelectOption = () => {\n//   const [selectedProvince, setSelectedProvince] = useState(null);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     const selected = provincesJson.provinces[provinceId];\n//     setSelectedProvince(selected);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n//         <option value=\"\">Select a Province</option>\n//         {Object.keys(provincesJson.provinces).map((provinceId) => (\n//           <option key={provinceId} value={provinceId}>\n//             {provincesJson.provinces[provinceId].name.km}\n//           </option>\n//         ))}\n//       </select>\n\n//       {selectedProvince && (\n//         <div>\n//           <h2>Selected Province</h2>\n//           <p>\n//             <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n//           </p>\n//           <p>\n//             <strong>Administrative Unit:</strong>{' '}\n//             {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsjSON","jsxDEV","_jsxDEV","SelectOption","_s","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","handlProvinceSelect","provinceId","selected","provinces","handleDistrictSelect","districtId","districts","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Object","keys","map","name","latin","km","districtIdId","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React,{ useState } from \"react\";\nimport provincesJson from './provinces.json'\nimport districtsjSON from './districts.json'\n\nconst SelectOption = () =>{\n  const [selectedProvince, setSelectedProvince] = useState ('')\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n\n  const handlProvinceSelect = (provinceId) => {\n    const selected = provincesJson.provinces[provinceId];\n    setSelectedProvince(selected)\n    setSelectedDistrict(null);\n  }\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n  };\n\n  // console.log(provincesJson);\n  // console.log(districtsjSON);\n  \n  return (\n    <div>\n      <h2>Province</h2>\n      <select onChange={(e) => handlProvinceSelect(e.target.value)}>\n        <option value=\"\">Select a province</option>\n        {Object.keys(provincesJson.provinces).map((provinceId)=>(\n            <option key = {provinceId} value = {provinceId}>{provincesJson.provinces[provinceId].name.latin} ({provincesJson.provinces[provinceId].name.km})</option>\n        ))\n        }\n      </select>\n      <select onChange={(e) => handleDistrictSelect(e.target.value)}>\n        <option value=\"\">Select a districts</option>\n        {Object.keys(districtsjSON.districts).map((districtIdId)=>(\n            <option key = {districtIdId} value = {districtIdId}>{districtsjSON.districts[districtIdId].name.latin} </option>\n        ))\n        }\n      </select>\n      {\n        selectedProvince && (\n          <div>\n            <h2>Your selected option is :</h2>\n            <p><strong>Province: </strong>{selectedProvince.name.latin} ({selectedProvince.name.km})</p>           \n          </div>\n        )\n      }\n      \n    </div>\n  )\n}\nexport default SelectOption;\n\n\n\n\n// import React, { useState } from 'react';\n// import provincesJson from './provinces.json';\n\n// const SelectOption = () => {\n//   const [selectedProvince, setSelectedProvince] = useState(null);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     const selected = provincesJson.provinces[provinceId];\n//     setSelectedProvince(selected);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n//         <option value=\"\">Select a Province</option>\n//         {Object.keys(provincesJson.provinces).map((provinceId) => (\n//           <option key={provinceId} value={provinceId}>\n//             {provincesJson.provinces[provinceId].name.km}\n//           </option>\n//         ))}\n//       </select>\n\n//       {selectedProvince && (\n//         <div>\n//           <h2>Selected Province</h2>\n//           <p>\n//             <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n//           </p>\n//           <p>\n//             <strong>Administrative Unit:</strong>{' '}\n//             {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SelectOption;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}