{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoExtractor = data => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name\n    };\n  });\n};\n// console.log(communesJosn);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces');\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts');\nconst communesData = geoExtractor(communesJosn.communes, 'communes');\n// console.log(communesData);\n\nconst SelectOption = () => {\n  _s();\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const handleProvinceSelect = provinceId => {\n    const province = provinces.find(obj => obj.id === provinceId);\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)));\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    // setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)))\n  };\n  const handleCommuneSelect = communeId => {\n    // const selectCommue = communesJosn.communes[communeId];\n    // setSelectedCommune(selectCommue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleProvinceSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: province.id,\n        children: [province.name.latin, \" / \", province.name.km]\n      }, province.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"District:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleDistrictSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a district\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: district.id,\n        children: [district.name.latin, \" / \", district.name.km]\n      }, district.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Communes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleCommuneSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Commune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), districts.map(commune => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: commune.id,\n        children: [commune.name.latin, \" / \", commune.name.km]\n      }, commune.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), selectedProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your selected option is:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Province: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), selectedProvince.name.latin, \" (\", selectedProvince.name.km, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"Kwxvi/exV63siwH6sCS8N2p6PuI=\");\n_c = SelectOption;\nexport default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsjSON","communesJosn","villagesJson","jsxDEV","_jsxDEV","geoExtractor","data","Object","keys","map","key","id","name","provinceData","provinces","districtsData","districts","communesData","communes","SelectOption","_s","setDistricts","setCommunes","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedCommune","setSelectedCommune","handleProvinceSelect","provinceId","province","find","obj","filter","district","startsWith","handleDistrictSelect","districtId","selected","handleCommuneSelect","communeId","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","latin","km","commune","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\n\nconst geoExtractor = (data) => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name \n    }\n  })\n}\n// console.log(communesJosn);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces')\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts')\nconst communesData = geoExtractor(communesJosn.communes, 'communes')\n// console.log(communesData);\n\nconst SelectOption = () => {\n\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n\n\n  const handleProvinceSelect = (provinceId) => {\n    const province = provinces.find(obj => obj.id === provinceId)\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)))\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    // setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)))\n  };\n\n  const handleCommuneSelect = (communeId) => {\n    // const selectCommue = communesJosn.communes[communeId];\n    // setSelectedCommune(selectCommue);\n    \n  }\n  return (\n    <div>\n      <h2>Province:</h2>\n      <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n        <option value=\"\">Select a province</option>\n        {provinces.map((province) => (\n          <option key={province.id} value={province.id}>\n            {province.name.latin} / {province.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>District:</h2>\n      <select onChange={(e) => handleDistrictSelect(e.target.value)}>\n        <option value=\"\">Select a district</option>\n        {districts.map((district) => (\n          <option key={district.id} value={district.id}>\n            {district.name.latin} / {district.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>Communes:</h2>\n      <select onChange={(e) => handleCommuneSelect(e.target.value)}>\n        <option value=\"\">Select a Commune</option>\n        {districts.map((commune) => (\n          <option key={commune.id} value={commune.id}>\n            {commune.name.latin} / {commune.name.km}\n          </option>\n        ))}\n      </select>\n\n      {selectedProvince && (\n        <div>\n          <h2>Your selected option is:</h2>\n          <p>\n            <strong>Province: </strong>\n            {selectedProvince.name.latin} ({selectedProvince.name.km})\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SelectOption;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC7B,OAAOC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,GAAG,CAACC,GAAG,IAAI;IAClC,OAAO;MACLC,EAAE,EAAED,GAAG;MACPE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,CAACE;IAClB,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AACD;;AAEA,MAAMC,YAAY,GAAGR,YAAY,CAACN,aAAa,CAACe,SAAS,EAAE,WAAW,CAAC;AACvE,MAAMC,aAAa,GAAGV,YAAY,CAACL,aAAa,CAACgB,SAAS,EAAE,WAAW,CAAC;AACxE,MAAMC,YAAY,GAAGZ,YAAY,CAACJ,YAAY,CAACiB,QAAQ,EAAE,UAAU,CAAC;AACpE;;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEzB,MAAM,CAACN,SAAS,CAAC,GAAGhB,QAAQ,CAACe,YAAY,CAAC;EAC1C,MAAM,CAACG,SAAS,EAAEK,YAAY,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,QAAQ,EAAEI,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAG1D,MAAM+B,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAMC,QAAQ,GAAGjB,SAAS,CAACkB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACtB,EAAE,KAAKmB,UAAU,CAAC;IAC7DN,mBAAmB,CAACO,QAAQ,CAAC;IAC7BV,YAAY,CAACN,aAAa,CAACmB,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACxB,EAAE,CAACyB,UAAU,CAACN,UAAU,CAAC,CAAC,CAAC;EACpF,CAAC;EAED,MAAMO,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAMC,QAAQ,GAAGvC,aAAa,CAACgB,SAAS,CAACsB,UAAU,CAAC;IACpDZ,mBAAmB,CAACa,QAAQ,CAAC;IAC7B;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIC,SAAS,IAAK;IACzC;IACA;EAAA,CAED;EACD,oBACErC,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1C,OAAA;MAAQ2C,QAAQ,EAAGC,CAAC,IAAKnB,oBAAoB,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC5DtC,OAAA;QAAQ8C,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1ChC,SAAS,CAACL,GAAG,CAAEsB,QAAQ,iBACtB3B,OAAA;QAA0B8C,KAAK,EAAEnB,QAAQ,CAACpB,EAAG;QAAA+B,QAAA,GAC1CX,QAAQ,CAACnB,IAAI,CAACuC,KAAK,EAAC,KAAG,EAACpB,QAAQ,CAACnB,IAAI,CAACwC,EAAE;MAAA,GAD9BrB,QAAQ,CAACpB,EAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAET1C,OAAA;MAAAsC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1C,OAAA;MAAQ2C,QAAQ,EAAGC,CAAC,IAAKX,oBAAoB,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC5DtC,OAAA;QAAQ8C,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC1C9B,SAAS,CAACP,GAAG,CAAE0B,QAAQ,iBACtB/B,OAAA;QAA0B8C,KAAK,EAAEf,QAAQ,CAACxB,EAAG;QAAA+B,QAAA,GAC1CP,QAAQ,CAACvB,IAAI,CAACuC,KAAK,EAAC,KAAG,EAAChB,QAAQ,CAACvB,IAAI,CAACwC,EAAE;MAAA,GAD9BjB,QAAQ,CAACxB,EAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAET1C,OAAA;MAAAsC,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB1C,OAAA;MAAQ2C,QAAQ,EAAGC,CAAC,IAAKR,mBAAmB,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,gBAC3DtC,OAAA;QAAQ8C,KAAK,EAAC,EAAE;QAAAR,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACzC9B,SAAS,CAACP,GAAG,CAAE4C,OAAO,iBACrBjD,OAAA;QAAyB8C,KAAK,EAAEG,OAAO,CAAC1C,EAAG;QAAA+B,QAAA,GACxCW,OAAO,CAACzC,IAAI,CAACuC,KAAK,EAAC,KAAG,EAACE,OAAO,CAACzC,IAAI,CAACwC,EAAE;MAAA,GAD5BC,OAAO,CAAC1C,EAAE;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EAERvB,gBAAgB,iBACfnB,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjC1C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1BvB,gBAAgB,CAACX,IAAI,CAACuC,KAAK,EAAC,IAAE,EAAC5B,gBAAgB,CAACX,IAAI,CAACwC,EAAE,EAAC,GAC3D;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvEID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAyElB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}