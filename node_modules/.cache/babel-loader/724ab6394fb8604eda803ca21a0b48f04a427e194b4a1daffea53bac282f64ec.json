{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst geoExtractor = data => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name\n    };\n  });\n};\n// console.log(villagesJson);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces');\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts');\nconst communesData = geoExtractor(communesJosn.communes, 'communes');\nconst villagsData = geoExtractor(villagesJson.villages, 'villages');\n// console.log(communesData);\n\nconst SelectOption = () => {\n  _s();\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n  const handleProvinceSelect = provinceId => {\n    const province = provinces.find(obj => obj.id === provinceId);\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)));\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)));\n  };\n  const handleCommuneSelect = communeId => {\n    const selectCommue = communesJosn.communes[communeId];\n    setSelectedCommune(selectCommue);\n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)));\n  };\n  const handleVillageSelect = villageId => {\n    const selectVillage = villagesJson.villages[villageId];\n    setSelectedVillage(selectVillage);\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n\n    // Here you can access the selectedProvince, selectedDistrict, selectedCommune, and selectedVillage state variables\n    // Do whatever you want with these values on form submission\n    console.log(\"Selected Province:\", selectedProvince);\n    console.log(\"Selected District:\", selectedDistrict);\n    console.log(\"Selected Commune:\", selectedCommune);\n    console.log(\"Selected Village:\", selectedVillage);\n\n    // Add further logic here for form submission, API calls, etc.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleProvinceSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), provinces.map(province => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: province.id,\n        children: [province.name.latin, \" / \", province.name.km]\n      }, province.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"District:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleDistrictSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a district\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), districts.map(district => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: district.id,\n        children: [district.name.latin, \" / \", district.name.km]\n      }, district.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Commune:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleCommuneSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a Commune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), communes.map(commune => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: commune.id,\n        children: [commune.name.latin, \" / \", commune.name.km]\n      }, commune.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"village:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleVillageSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a village\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), villages.map(village => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: village.id,\n        children: [village.name.latin, \" / \", village.name.km]\n      }, village.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onSubmit: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"B2J2LI3S39askIVpLdyc0YJzlhg=\");\n_c = SelectOption;\nexport default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsjSON","communesJosn","villagesJson","jsxDEV","_jsxDEV","geoExtractor","data","Object","keys","map","key","id","name","provinceData","provinces","districtsData","districts","communesData","communes","villagsData","villages","SelectOption","_s","setDistricts","setCommunes","setVillages","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","selectedCommune","setSelectedCommune","selectedVillage","setSelectedVillage","handleProvinceSelect","provinceId","province","find","obj","filter","district","startsWith","handleDistrictSelect","districtId","selected","commune","handleCommuneSelect","communeId","selectCommue","village","handleVillageSelect","villageId","selectVillage","handleSubmit","e","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","latin","km","type","onSubmit","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport communesJosn from './communes.json';\nimport villagesJson from './villages.json';\n\nconst geoExtractor = (data) => {\n  return Object.keys(data).map(key => {\n    return {\n      id: key,\n      name: data[key].name \n    }\n  })\n}\n// console.log(villagesJson);\n\nconst provinceData = geoExtractor(provincesJson.provinces, 'provinces')\nconst districtsData = geoExtractor(districtsjSON.districts, 'districts')\nconst communesData = geoExtractor(communesJosn.communes, 'communes')\nconst villagsData = geoExtractor(villagesJson.villages, 'villages')\n// console.log(communesData);\n\nconst SelectOption = () => {\n\n  const [provinces] = useState(provinceData);\n  const [districts, setDistricts] = useState([]);\n  const [communes, setCommunes] = useState([]);\n  const [villages, setVillages] = useState([]);\n\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState('');\n  const [selectedCommune, setSelectedCommune] = useState('');\n  const [selectedVillage, setSelectedVillage] = useState('');\n\n\n  const handleProvinceSelect = (provinceId) => {\n    const province = provinces.find(obj => obj.id === provinceId)\n    setSelectedProvince(province);\n    setDistricts(districtsData.filter(district => district.id.startsWith(provinceId)))\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n    setCommunes(communesData.filter(commune => commune.id.startsWith(districtId)))\n  };\n\n  const handleCommuneSelect = (communeId) => {\n    const selectCommue = communesJosn.communes[communeId];\n    setSelectedCommune(selectCommue); \n    setVillages(villagsData.filter(village => village.id.startsWith(communeId)))\n  }\n\n  const handleVillageSelect = (villageId) => {\n    const selectVillage = villagesJson.villages[villageId];\n    setSelectedVillage(selectVillage)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent the default form submission behavior\n\n    // Here you can access the selectedProvince, selectedDistrict, selectedCommune, and selectedVillage state variables\n    // Do whatever you want with these values on form submission\n    console.log(\"Selected Province:\", selectedProvince);\n    console.log(\"Selected District:\", selectedDistrict);\n    console.log(\"Selected Commune:\", selectedCommune);\n    console.log(\"Selected Village:\", selectedVillage);\n\n    // Add further logic here for form submission, API calls, etc.\n  }\n\n  return (\n    <div>\n      <h2>Province:</h2>\n      <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n        <option value=\"\">Select a province</option>\n        {provinces.map((province) => (\n          <option key={province.id} value={province.id}>\n            {province.name.latin} / {province.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>District:</h2>\n      <select onChange={(e) => handleDistrictSelect(e.target.value)}>\n        <option value=\"\">Select a district</option>\n        {districts.map((district) => (\n          <option key={district.id} value={district.id}>\n            {district.name.latin} / {district.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>Commune:</h2>\n      <select onChange={(e) => handleCommuneSelect(e.target.value)}>\n        <option value=\"\">Select a Commune</option>\n        {communes.map((commune) => (\n          <option key={commune.id} value={commune.id}>\n            {commune.name.latin} / {commune.name.km}\n          </option>\n        ))}\n      </select>\n\n      <h2>village:</h2>\n      <select onChange={(e) => handleVillageSelect(e.target.value)}>\n        <option value=\"\">Select a village</option>\n        {villages.map((village) => (\n          <option key={village.id} value={village.id}>\n            {village.name.latin} / {village.name.km}\n          </option>\n        ))}\n      </select>\n\n      <button type=\"submit\" onSubmit={handleSubmit}>Submit</button>\n\n      {/* {selectedProvince && (\n        <div>\n          <h2>Your selected option is:</h2>\n          <p>\n            <strong>Province: </strong>\n            {selectedProvince.name.latin} ({selectedProvince.name.km})\n          </p>\n        </div>\n      )} */}\n    </div>\n  );\n};\n\nexport default SelectOption;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}