{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectOption = () => {\n  _s();\n  const [provincesData, setProvincesData] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n\n  // const loopProvinces = () => {\n\n  //   const getProvinces = Object.keys(provincesJson).map(provinceId => ({\n  //     id:provinceId,\n  //     provinceName:provincesJson.provinces[provinceId].name.latin\n  //   }))\n\n  //   setProvincesData(getProvinces)\n  //   console.log(provincesData)\n  // }\n\n  // useEffect(() => {\n  //   loopProvinces()\n  // },[])\n\n  const handleProvinceSelect = provinceId => {\n    const selected = provincesData[provinceId];\n    setSelectedProvince(selected);\n    setSelectedDistrict(null);\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"HYhqu2ozmC1kmNJ8Ns/IUQlSKEo=\");\n_c = SelectOption;\nexport default SelectOption;\n\n// import React, { useState } from 'react';\n// import provincesJson from './provinces.json';\n\n// const SelectOption = () => {\n//   const [selectedProvince, setSelectedProvince] = useState(null);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     const selected = provincesJson.provinces[provinceId];\n//     setSelectedProvince(selected);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n//         <option value=\"\">Select a Province</option>\n//         {Object.keys(provincesJson.provinces).map((provinceId) => (\n//           <option key={provinceId} value={provinceId}>\n//             {provincesJson.provinces[provinceId].name.km}\n//           </option>\n//         ))}\n//       </select>\n\n//       {selectedProvince && (\n//         <div>\n//           <h2>Selected Province</h2>\n//           <p>\n//             <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n//           </p>\n//           <p>\n//             <strong>Administrative Unit:</strong>{' '}\n//             {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useEffect","useState","provincesJson","districtsjSON","jsxDEV","_jsxDEV","SelectOption","_s","provincesData","setProvincesData","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","handleProvinceSelect","provinceId","selected","handleDistrictSelect","districtId","districts","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsjSON from './districts.json';\n\nconst SelectOption = () => {\n  const [provincesData,setProvincesData] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState('');\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n\n  // const loopProvinces = () => {\n\n  //   const getProvinces = Object.keys(provincesJson).map(provinceId => ({\n  //     id:provinceId,\n  //     provinceName:provincesJson.provinces[provinceId].name.latin\n  //   }))\n\n  //   setProvincesData(getProvinces)\n  //   console.log(provincesData)\n  // }\n\n  // useEffect(() => {\n  //   loopProvinces()\n  // },[])\n\n  const handleProvinceSelect = (provinceId) => {\n    const selected = provincesData[provinceId];\n    setSelectedProvince(selected);\n    setSelectedDistrict(null);\n  };\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = districtsjSON.districts[districtId];\n    setSelectedDistrict(selected);\n  };\n\n  return (\n    <div>\n      {/* <h2>Province:</h2>\n      <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n        <option value=\"\">Select a province</option>\n        {Object.keys(provincesData).map((provinceId) => (\n          <option key={provinceId} value={provinceId}>\n            {provincesData[provinceId].name.latin} ({provincesData[provinceId].name.km})\n          </option>\n        ))}\n      </select>\n\n      <h2>District:</h2>\n      <select onChange={(e) => handleDistrictSelect(e.target.value)}>\n        <option value=\"\">Select a district</option>\n        {Object.keys(districtsjSON.districts).map((districtId) => (\n          <option key={districtId} value={districtId}>\n            {districtsjSON.districts[districtId].name.latin} ({districtsjSON.districts[districtId].name.km})\n          </option>\n        ))}\n      </select>\n\n      {selectedProvince && (\n        <div>\n          <h2>Your selected option is:</h2>\n          <p>\n            <strong>Province: </strong>\n            {selectedProvince.name.latin} ({selectedProvince.name.km})\n          </p>\n        </div>\n      )} */}\n    </div>\n  );\n};\n\nexport default SelectOption;\n\n\n\n\n// import React, { useState } from 'react';\n// import provincesJson from './provinces.json';\n\n// const SelectOption = () => {\n//   const [selectedProvince, setSelectedProvince] = useState(null);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     const selected = provincesJson.provinces[provinceId];\n//     setSelectedProvince(selected);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n//         <option value=\"\">Select a Province</option>\n//         {Object.keys(provincesJson.provinces).map((provinceId) => (\n//           <option key={provinceId} value={provinceId}>\n//             {provincesJson.provinces[provinceId].name.km}\n//           </option>\n//         ))}\n//       </select>\n\n//       {selectedProvince && (\n//         <div>\n//           <h2>Selected Province</h2>\n//           <p>\n//             <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n//           </p>\n//           <p>\n//             <strong>Administrative Unit:</strong>{' '}\n//             {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SelectOption;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,aAAa,EAACC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9D;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMa,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAMC,QAAQ,GAAGR,aAAa,CAACO,UAAU,CAAC;IAC1CJ,mBAAmB,CAACK,QAAQ,CAAC;IAC7BH,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMI,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAMF,QAAQ,GAAGb,aAAa,CAACgB,SAAS,CAACD,UAAU,CAAC;IACpDL,mBAAmB,CAACG,QAAQ,CAAC;EAC/B,CAAC;EAED,oBACEX,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA8BK,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhEID,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAkElB,eAAeA,YAAY;;AAK3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}