{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsJson from './districts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectOption = () => {\n  _s();\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n  const handleProvinceSelect = provinceId => {\n    setSelectedProvince(provincesJson.provinces[provinceId]);\n    setSelectedDistrict(null);\n  };\n  const handleDistrictSelect = districtId => {\n    const selected = selectedProvince && selectedProvince.districts[districtId];\n    setSelectedDistrict(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Province\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => handleProvinceSelect(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), Object.keys(provincesJson.provinces).map(provinceId => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: provinceId,\n        children: [provincesJson.provinces[provinceId].name.latin, \" (\", provincesJson.provinces[provinceId].name.km, \")\"]\n      }, provinceId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), selectedProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handleDistrictSelect(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a District\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), Object.keys(selectedProvince.districts).map(districtId => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: districtId,\n          children: [selectedProvince.districts[districtId].name.latin, \" (\", selectedProvince.districts[districtId].name.km, \")\"]\n        }, districtId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), selectedDistrict && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selected District\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), \" \", selectedDistrict.name.km, \" (\", selectedDistrict.name.latin, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Administrative Unit:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), \" \", selectedDistrict.administrative_unit.km, \" (\", selectedDistrict.administrative_unit.latin, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectOption, \"CkExOGcUJ78u1YntpA8Ef2pDPPg=\");\n_c = SelectOption;\nexport default SelectOption;\n\n// import React, { useState } from 'react';\n// import provincesJson from './provinces.json';\n\n// const SelectOption = () => {\n//   const [selectedProvince, setSelectedProvince] = useState(null);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     const selected = provincesJson.provinces[provinceId];\n//     setSelectedProvince(selected);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n//         <option value=\"\">Select a Province</option>\n//         {Object.keys(provincesJson.provinces).map((provinceId) => (\n//           <option key={provinceId} value={provinceId}>\n//             {provincesJson.provinces[provinceId].name.km}\n//           </option>\n//         ))}\n//       </select>\n\n//       {selectedProvince && (\n//         <div>\n//           <h2>Selected Province</h2>\n//           <p>\n//             <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n//           </p>\n//           <p>\n//             <strong>Administrative Unit:</strong>{' '}\n//             {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SelectOption;\nvar _c;\n$RefreshReg$(_c, \"SelectOption\");","map":{"version":3,"names":["React","useState","provincesJson","districtsJson","jsxDEV","_jsxDEV","SelectOption","_s","selectedProvince","setSelectedProvince","selectedDistrict","setSelectedDistrict","handleProvinceSelect","provinceId","provinces","handleDistrictSelect","districtId","selected","districts","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Object","keys","map","name","latin","km","administrative_unit","_c","$RefreshReg$"],"sources":["/home/marin/Documents/pro_reactnetive/filter-province/src/Pages/selectOption.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport provincesJson from './provinces.json';\nimport districtsJson from './districts.json';\n\nconst SelectOption = () => {\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [selectedDistrict, setSelectedDistrict] = useState(null);\n\n  const handleProvinceSelect = (provinceId) => {\n    setSelectedProvince(provincesJson.provinces[provinceId]);\n    setSelectedDistrict(null);\n  }\n\n  const handleDistrictSelect = (districtId) => {\n    const selected = selectedProvince && selectedProvince.districts[districtId];\n    setSelectedDistrict(selected);\n  };\n\n  return (\n    <div>\n      <h2>Province</h2>\n      <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n        <option value=\"\">Select a province</option>\n        {Object.keys(provincesJson.provinces).map((provinceId) => (\n          <option key={provinceId} value={provinceId}>\n            {provincesJson.provinces[provinceId].name.latin} ({provincesJson.provinces[provinceId].name.km})\n          </option>\n        ))}\n      </select>\n\n      {selectedProvince && (\n        <div>\n          <h2>District</h2>\n          <select onChange={(e) => handleDistrictSelect(e.target.value)}>\n            <option value=\"\">Select a District</option>\n            {Object.keys(selectedProvince.districts).map((districtId) => (\n              <option key={districtId} value={districtId}>\n                {selectedProvince.districts[districtId].name.latin} ({selectedProvince.districts[districtId].name.km})\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      {selectedDistrict && (\n        <div>\n          <h2>Selected District</h2>\n          <p>\n            <strong>Name:</strong> {selectedDistrict.name.km} ({selectedDistrict.name.latin})\n          </p>\n          <p>\n            <strong>Administrative Unit:</strong> {selectedDistrict.administrative_unit.km} ({selectedDistrict.administrative_unit.latin})\n          </p>\n        </div>\n      )}\n    </div>\n  )\n};\n\nexport default SelectOption;\n\n\n\n\n// import React, { useState } from 'react';\n// import provincesJson from './provinces.json';\n\n// const SelectOption = () => {\n//   const [selectedProvince, setSelectedProvince] = useState(null);\n\n//   const handleProvinceSelect = (provinceId) => {\n//     const selected = provincesJson.provinces[provinceId];\n//     setSelectedProvince(selected);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Province</h2>\n//       <select onChange={(e) => handleProvinceSelect(e.target.value)}>\n//         <option value=\"\">Select a Province</option>\n//         {Object.keys(provincesJson.provinces).map((provinceId) => (\n//           <option key={provinceId} value={provinceId}>\n//             {provincesJson.provinces[provinceId].name.km}\n//           </option>\n//         ))}\n//       </select>\n\n//       {selectedProvince && (\n//         <div>\n//           <h2>Selected Province</h2>\n//           <p>\n//             <strong>Name:</strong> {selectedProvince.name.km} ({selectedProvince.name.latin})\n//           </p>\n//           <p>\n//             <strong>Administrative Unit:</strong>{' '}\n//             {selectedProvince.administrative_unit.km} ({selectedProvince.administrative_unit.latin})\n//           </p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default SelectOption;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}